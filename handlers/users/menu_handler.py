from aiogram.types import Message, FSInputFile,CallbackQuery
from loader import dp, db
from aiogram import F

from aiogram.fsm.context import FSMContext

from keyboards.default.second_level_btns import for_buyurtma_berish, barcha_filiallar
from keyboards.default.second_level_btns import yetkazib_berish_kb
from states.level_states import FiliallarState, BuyurtmaBerishState

from keyboards.inline.vacancy_kb import kurer_menu, operator_menu,tozalik_xodimi_menu, ranner_menu, qadoqlovchi_menu, kassir_menu, oshpaz_menu
from keyboards.default.categories_kb import get_categories_kb
from keyboards.default.products_kb import make_products_keyboard
from keyboards.inline.product_plus_mines_kb import make_product_plus_minus,get_user_cart_sub_keyboard


@dp.message(F.text == 'üõç –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
async def burtma_berish(message: Message,state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏", reply_markup=for_buyurtma_berish)

@dp.message(F.text == 'üéâ –ê–∫—Ü–∏–∏')
async def buy_berish(message: Message,state: FSMContext):
    await message.answer("–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ—Ç –∞–∫—Ü–∏–π")

@dp.message(F.text == 'üîç –í–∞–∫–∞–Ω—Å–∏–∏')
async def buyuma_berish(message: Message,state: FSMContext):
    await message.answer("üíº –í–∞–∫–∞–Ω—Å–∏–∏:", reply_markup=kurer_menu)
    await message.answer("–ö—É—Ä—å–µ—Ä\n–ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –≤ –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏:\n- –í—ã –∫–ª–∞—Å—Å–Ω—ã–π –≤–æ–¥–∏—Ç–µ–ª—å —Å–æ —Å–≤–æ–∏–º –∞–≤—Ç–æ;\n - –ª—é–±–∏—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏;\n - –∏—â–µ—Ç–µ —Ä–∞–±–æ—Ç—É —Å–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–º –∑–∞—Ä–∞–±–æ—Ç–∫–æ–º.\n\n –ß—Ç–æ –º—ã –æ—Ç –í–∞—Å –æ–∂–∏–¥–∞–µ–º:\n ‚Ä¢ –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 20 –¥–æ 40 –ª–µ—Ç;\n ‚Ä¢ –∑–Ω–∞–Ω–∏–µ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞;\n ‚Ä¢ –∑–Ω–∞–Ω–∏–µ —É–∑–±–µ–∫—Å–∫–æ–≥–æ —è–∑—ã–∫–∞; ‚Ä¢ –∑–Ω–∞–Ω–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –±—É–¥–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º;\n ‚Ä¢ —Ö–æ—Ä–æ—à–µ–µ –∑–Ω–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –Ω–∞ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏;\n ‚Ä¢ —É–º–µ–Ω–∏–µ –æ–±—â–∞—Ç—å—Å—è —Å –ª—é–¥—å–º–∏;\n ‚Ä¢ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤—Ä–µ–¥–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫.\n\n –ß—Ç–æ –º—ã –í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:\n ‚Ä¢ —Ä–∞–∑–º–µ—Ä –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã: *–Ω–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ (7 –¥–Ω–µ–π) ‚Äî 80.000 —Å—É–º; *–ø–æ—Å–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ ‚Äî 150.000 —Å—É–º + –±–æ–Ω—É—Å—ã;\n ‚Ä¢ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ;\n ‚Ä¢ –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: 6/1, 11 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å;\n ‚Ä¢ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞;", reply_markup=kurer_menu)
    await message.answer("–û–ø–µ—Ä–∞—Ç–æ—Ä –∫–æ–ª\-—Ü–µ–Ω—Ç—Ä–∞", reply_markup=operator_menu)
    await message.answer("–¢–µ—Ö–Ω–∏—á–∫–∞", reply_markup=tozalik_xodimi_menu)
    await message.answer("–†–∞–Ω–Ω–µ—Ä", reply_markup=ranner_menu)
    await message.answer("–†–∞–∑–¥–∞—á–∞", reply_markup=qadoqlovchi_menu)
    await message.answer("–ö–∞—Å—Å–∏—Ä", reply_markup=kassir_menu)
    await message.answer("–ü–æ–≤–∞—Ä", reply_markup=oshpaz_menu)

@dp.message(F.text == 'üöñ –î–æ—Å—Ç–∞–≤–∫–∞')
async def yetkazib_berish_handler(message: Message, state: FSMContext):
    await message.answer(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–∫–∞–∑.',
        reply_markup=yetkazib_berish_kb
        )
    await state.set_state(BuyurtmaBerishState.yetkazib_berish)


@dp.message(BuyurtmaBerishState.yetkazib_berish)
async def location_handler(message: Message, state: FSMContext):
    if message.location:
        latitude = message.location.latitude
        longitude = message.location.longitude

        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π', reply_markup=get_categories_kb())
        await state.update_data(
            latitude=latitude, longitude=longitude
        )
        await state.set_state(BuyurtmaBerishState.category)
    else:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ', reply_markup=yetkazib_berish_kb)


@dp.message(BuyurtmaBerishState.category)
async def user_category_handler(message: Message, state: FSMContext):
    name = message.text
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤", 
        reply_markup=make_products_keyboard(name))
    
    await state.set_state(BuyurtmaBerishState.product)

@dp.message(F.text == 'üõí Savat', BuyurtmaBerishState.product)
async def show_user_cart_handler(message: Message, state: FSMContext):
    user = message.from_user.id
    carts = db.get_user_cart(user=user)

    main_text = ''
    for cart in carts:
        name, price, quantity = cart
        main_text += f"{name} x {quantity} = {quantity*price}\n"


    await message.answer(main_text,reply_markup=get_user_cart_sub_keyboard())

@dp.message(F.text == '‚¨ÖÔ∏è Orqaga', BuyurtmaBerishState.product)
async def back_to_select_product_handler(message: Message, state: FSMContext):
    data = await state.get_data()
    category = data.get('category')
    await message.answer(
        "Mahsulotlardan  birini tanlang", 
        reply_markup=make_products_keyboard(category))


@dp.message(BuyurtmaBerishState.product)
async def user_product_handler(message: Message, state: FSMContext):
    product_name = message.text

    name, description, price, image = db.get_product(product_name)
    caption = f"{name}\n{description}\n\n{name} {price} x 1 = {price}\n–û–±—â–∏–π: {price}"

    photo_file = FSInputFile(path=image)
    await message.answer_photo(
        photo=photo_file,
        caption=caption,
        reply_markup=make_product_plus_minus())
    
    await state.update_data(
        name=name,description=description,
        price=price,quantity = 1
    )

@dp.callback_query(BuyurtmaBerishState.product,F.data =='plus')    
async def product_plus_handler(call:CallbackQuery,state:FSMContext):
  await call.answer("–ü–ª—é—Å –Ω–∞–∂–∞—Ç") 
  data = await state.get_data()
  quantity = data .get('quantity')
  quantity += 1
  name = data.get('name')
  description = data.get('deacription')
  price = data.get('price')
  await state.update_data(quantity=quantity)

  jami = price * quantity
  caption = f"{name}\n{description}\n\n{name} {price} x {quantity} = {jami}\n–û–±—â–∏–π: {jami}"

  await call.message.edit_caption(caption=caption,reply_markup=make_product_plus_minus(quantity))

@dp.callback_query(BuyurtmaBerishState.product,F.data =='minus')    
async def product_plus_handler(call:CallbackQuery,state:FSMContext):
  await call.answer("–ú–∏–Ω—É—Å –Ω–∞–∂–∞—Ç") 
  data = await state.get_data()
  quantity = data.get('quantity')
  if quantity !=1:
    quantity -= 1
    await state.update_data(quantity=quantity) 
    name = data.get('name')
    description = data.get('deacription')
    price = data.get('price')

    jami = price * quantity
    caption = f"{name}\n{description}\n\n{name} {price} x {quantity} = {jami}\n–û–±—â–∏–π: {jami}"

    await call.message.edit_caption(caption=caption,reply_markup=make_product_plus_minus(quantity))

@dp.callback_query(BuyurtmaBerishState.product,F.data == 'add_to_cart')
async def add_to_cart_handler(call:CallbackQuery, state:FSMContext):
    data = await state.update_data()
    name = data.get('name')
    quantity = data.get('quantity')
    user = call.from_user.id

    db.add_to_cart(
        product_name=name,
        quantity=quantity,
        user=user  
    )

    await call.message.answer("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ä–∑–∏–Ω—É")
    await call.message.delete()



@dp.callback_query(BuyurtmaBerishState.product, F.data == 'clean_cart')
async def clean_cart_handler(call: CallbackQuery, state: FSMContext):
    tg_id = call.from_user.id
    db.clean_user_cart(user=tg_id)
    data = await state.get_data()
    category = data.get('category')

    await call.message.answer(
        "Mahsulotlardan  birini tanlang", 
        reply_markup=make_products_keyboard(category))
    
    await call.answer('Savat tozalandi')
    await call.message.delete()
